{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Title","styled","h1","Paragraph","p","App","useState","name","setName","firstname","setFirstName","phone","setPhone","email","setEmail","message","setMessage","failMessage","formMess","document","querySelector","innerHTML","style","opacity","background","getElementById","classList","add","sendFeedback","templateId","variables","window","emailjs","send","then","res","remove","setTimeout","successMessage","catch","err","className","type","id","onChange","e","target","value","placeholder","autoComplete","onClick","preventDefault","mail","match","display","animation","isEmail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","init","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7009ab1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\n\n  const Title = styled.h1`\n  color: white;\n  font-size: 30 px;\n  text-align: center;\n  `\n  const Paragraph = styled.p`\ntext-align: center;\ncolor: white;\n`\nconst App = () => {\n  const [name, setName] = useState(\"\");\n  const [firstname, setFirstName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  \n\nconst isEmail = () => {\n\n  let mail = document.getElementById('not-mail');\n  let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n  if (email.match(regex)){\n\n    mail.style.display='none';\n    return true;\n    \n  } else {\n    mail.style.display ='block';\n    mail.style.animation ='dongle 1s';\n    setTimeout(()=>{\n      mail.style.animation ='none';\n    },1000);\n    return false;\n  }\n}\n\nconst failMessage = (message) => {\n\n  let formMess = document.querySelector('.form-message');\n  formMess.innerHTML = message;\n  formMess.style.opacity = '1';\n  formMess.style.background = 'rgb(253,87,87)';\n\n  document.getElementById('name').classList.add('error');\n  document.getElementById('firstname').classList.add('error');\n  document.getElementById('email').classList.add('error');\n  document.getElementById('message').classList.add('error');\n}\n\n\nconst successMessage = () =>{\n  let formMess = document.querySelector ('.form-message');\n  formMess.innerHTML = 'Message envoyé ! Nous vous recontacterons dès que possible.';\n  formMess.style.background = '00C1ec';\n  formMess.style.opacity = '1';\n  document.getElementById('name').classList.remove('error');\n  document.getElementById('firstname').classList.remove('error');\n  document.getElementById('email').classList.remove('error');\n  document.getElementById('message').classList.remove('error');\n\nsetTimeout(() => {\nformMess.style.opacity = '0';\n}, 5000);\n\n\n}\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(name && firstname && isEmail() && message)\n    sendFeedback(\"marieform\", {\n      name,\n      firstname,\n      phone,\n      email,\n      message,\n    });\n   else {\n    failMessage(\"Merci de remplir correctement les champs requis*\");\n  }\n  };\n\n  const sendFeedback = (templateId, variables) => {\n\n    window.emailjs\n      .send(\"Marie\", templateId, variables)\n      .then((res) => {\n        successMessage();\n        setName(\"\");\n        setFirstName(\"\");\n        setPhone(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n      })\n      .catch(\n        (err) =>{\n\n          failMessage(\"Une erreur s'est produite, veuillez réessayer.\")\n         }\n          );            \n  };\n\n  return (\n    <form className=\"contact-form\">\n      <Title>Contactez-nous</Title>\n      <Paragraph>My form is for Titouan. The library is styled-component. We have firstname*, name*, mail* and phone for the user. I use EmailJS (I use Front-end withtout using back-end nor Xamp.</Paragraph>\n      <div className=\"form-content\">\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"nom *\"\n          value={name}\n          autoComplete=\"off\"\n        />\n        <input\n          type=\"text\"\n          id=\"firstname\"\n          name=\"firstname\"\n          onChange={(e) => setFirstName(e.target.value)}\n          placeholder=\"prénom *\"\n          value={firstname}\n          autoComplete=\"off\"\n        />\n        <input\n          type=\"text\"\n          id=\"phone\"\n          name=\"phone\"\n          onChange={(e) => setPhone(e.target.value)}\n          placeholder=\"téléphone\"\n          value={phone}\n        />\n        <div className=\"email-content\">\n          <label id=\"not-mail\">Email non valide</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"email *\"\n            value={email}\n            autoComplete=\"off\"\n          />\n        </div>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"message *\"\n          value={message}\n         \n        />\n      </div>\n      <input\n        className=\"button\"\n        type=\"button\"\n        value=\"Envoyer\"\n        onClick={handleSubmit}\n      />\n      <div className=\"form-message\"></div>\n    </form>\n  );\n};\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport{ init } from 'emailjs-com';\ninit(\"user_GPGUwfyHz01NCKVXCmclN\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}